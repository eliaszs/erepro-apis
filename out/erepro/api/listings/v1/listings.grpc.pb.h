// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: erepro/api/listings/v1/listings.proto
#ifndef GRPC_erepro_2fapi_2flistings_2fv1_2flistings_2eproto__INCLUDED
#define GRPC_erepro_2fapi_2flistings_2fv1_2flistings_2eproto__INCLUDED

#include "erepro/api/listings/v1/listings.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace erepro {
namespace api {
namespace listings {
namespace v1 {

// Manages cloud listing resources.
class Listings final {
 public:
  static constexpr char const* service_full_name() {
    return "erepro.api.listings.v1.Listings";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // List the availalbe listings
    virtual ::grpc::Status ListListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::erepro::api::listings::v1::ListListingsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::ListListingsResponse>> AsyncListListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::ListListingsResponse>>(AsyncListListingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::ListListingsResponse>> PrepareAsyncListListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::ListListingsResponse>>(PrepareAsyncListListingsRaw(context, request, cq));
    }
    // Search for listings that match specific filter criteria.
    virtual ::grpc::Status SearchListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::erepro::api::listings::v1::SearchListingsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::SearchListingsResponse>> AsyncSearchListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::SearchListingsResponse>>(AsyncSearchListingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::SearchListingsResponse>> PrepareAsyncSearchListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::SearchListingsResponse>>(PrepareAsyncSearchListingsRaw(context, request, cq));
    }
    // Retrives a listing identified by the supplied listing name
    virtual ::grpc::Status GetListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::erepro::api::listings::v1::Listing* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>> AsyncGetListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>>(AsyncGetListingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>> PrepareAsyncGetListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>>(PrepareAsyncGetListingRaw(context, request, cq));
    }
    // Create a listing in the database
    virtual ::grpc::Status CreateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncCreateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncCreateListingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncCreateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncCreateListingRaw(context, request, cq));
    }
    // Update a listing
    virtual ::grpc::Status UpdateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::erepro::api::listings::v1::Listing* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>> AsyncUpdateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>>(AsyncUpdateListingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>> PrepareAsyncUpdateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>>(PrepareAsyncUpdateListingRaw(context, request, cq));
    }
    // Delete a listing
    virtual ::grpc::Status DeleteListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::erepro::api::listings::v1::Listing* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>> AsyncDeleteListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>>(AsyncDeleteListingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>> PrepareAsyncDeleteListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>>(PrepareAsyncDeleteListingRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::ListListingsResponse>* AsyncListListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::ListListingsResponse>* PrepareAsyncListListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::SearchListingsResponse>* AsyncSearchListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::SearchListingsResponse>* PrepareAsyncSearchListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>* AsyncGetListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>* PrepareAsyncGetListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncCreateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncCreateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>* AsyncUpdateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>* PrepareAsyncUpdateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>* AsyncDeleteListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::erepro::api::listings::v1::Listing>* PrepareAsyncDeleteListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status ListListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::erepro::api::listings::v1::ListListingsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::ListListingsResponse>> AsyncListListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::ListListingsResponse>>(AsyncListListingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::ListListingsResponse>> PrepareAsyncListListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::ListListingsResponse>>(PrepareAsyncListListingsRaw(context, request, cq));
    }
    ::grpc::Status SearchListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::erepro::api::listings::v1::SearchListingsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::SearchListingsResponse>> AsyncSearchListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::SearchListingsResponse>>(AsyncSearchListingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::SearchListingsResponse>> PrepareAsyncSearchListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::SearchListingsResponse>>(PrepareAsyncSearchListingsRaw(context, request, cq));
    }
    ::grpc::Status GetListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::erepro::api::listings::v1::Listing* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>> AsyncGetListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>>(AsyncGetListingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>> PrepareAsyncGetListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>>(PrepareAsyncGetListingRaw(context, request, cq));
    }
    ::grpc::Status CreateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncCreateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncCreateListingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncCreateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncCreateListingRaw(context, request, cq));
    }
    ::grpc::Status UpdateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::erepro::api::listings::v1::Listing* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>> AsyncUpdateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>>(AsyncUpdateListingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>> PrepareAsyncUpdateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>>(PrepareAsyncUpdateListingRaw(context, request, cq));
    }
    ::grpc::Status DeleteListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::erepro::api::listings::v1::Listing* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>> AsyncDeleteListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>>(AsyncDeleteListingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>> PrepareAsyncDeleteListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>>(PrepareAsyncDeleteListingRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::ListListingsResponse>* AsyncListListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::ListListingsResponse>* PrepareAsyncListListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::SearchListingsResponse>* AsyncSearchListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::SearchListingsResponse>* PrepareAsyncSearchListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* AsyncGetListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* PrepareAsyncGetListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncCreateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncCreateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* AsyncUpdateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* PrepareAsyncUpdateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* AsyncDeleteListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* PrepareAsyncDeleteListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ListListings_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchListings_;
    const ::grpc::internal::RpcMethod rpcmethod_GetListing_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateListing_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateListing_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteListing_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // List the availalbe listings
    virtual ::grpc::Status ListListings(::grpc::ServerContext* context, const ::erepro::api::listings::v1::ListListingsRequest* request, ::erepro::api::listings::v1::ListListingsResponse* response);
    // Search for listings that match specific filter criteria.
    virtual ::grpc::Status SearchListings(::grpc::ServerContext* context, const ::erepro::api::listings::v1::SearchListingsRequest* request, ::erepro::api::listings::v1::SearchListingsResponse* response);
    // Retrives a listing identified by the supplied listing name
    virtual ::grpc::Status GetListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::GetListingRequest* request, ::erepro::api::listings::v1::Listing* response);
    // Create a listing in the database
    virtual ::grpc::Status CreateListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::CreateListingRequest* request, ::google::longrunning::Operation* response);
    // Update a listing
    virtual ::grpc::Status UpdateListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::UpdateListingRequest* request, ::erepro::api::listings::v1::Listing* response);
    // Delete a listing
    virtual ::grpc::Status DeleteListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::DeleteListingRequest* request, ::erepro::api::listings::v1::Listing* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ListListings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListListings() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ListListings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListListings(::grpc::ServerContext* context, const ::erepro::api::listings::v1::ListListingsRequest* request, ::erepro::api::listings::v1::ListListingsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListListings(::grpc::ServerContext* context, ::erepro::api::listings::v1::ListListingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::erepro::api::listings::v1::ListListingsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchListings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SearchListings() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SearchListings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchListings(::grpc::ServerContext* context, const ::erepro::api::listings::v1::SearchListingsRequest* request, ::erepro::api::listings::v1::SearchListingsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchListings(::grpc::ServerContext* context, ::erepro::api::listings::v1::SearchListingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::erepro::api::listings::v1::SearchListingsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetListing() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::GetListingRequest* request, ::erepro::api::listings::v1::Listing* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetListing(::grpc::ServerContext* context, ::erepro::api::listings::v1::GetListingRequest* request, ::grpc::ServerAsyncResponseWriter< ::erepro::api::listings::v1::Listing>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateListing() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_CreateListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::CreateListingRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateListing(::grpc::ServerContext* context, ::erepro::api::listings::v1::CreateListingRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateListing() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UpdateListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::UpdateListingRequest* request, ::erepro::api::listings::v1::Listing* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateListing(::grpc::ServerContext* context, ::erepro::api::listings::v1::UpdateListingRequest* request, ::grpc::ServerAsyncResponseWriter< ::erepro::api::listings::v1::Listing>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteListing() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::DeleteListingRequest* request, ::erepro::api::listings::v1::Listing* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteListing(::grpc::ServerContext* context, ::erepro::api::listings::v1::DeleteListingRequest* request, ::grpc::ServerAsyncResponseWriter< ::erepro::api::listings::v1::Listing>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ListListings<WithAsyncMethod_SearchListings<WithAsyncMethod_GetListing<WithAsyncMethod_CreateListing<WithAsyncMethod_UpdateListing<WithAsyncMethod_DeleteListing<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_ListListings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListListings() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ListListings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListListings(::grpc::ServerContext* context, const ::erepro::api::listings::v1::ListListingsRequest* request, ::erepro::api::listings::v1::ListListingsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchListings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SearchListings() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SearchListings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchListings(::grpc::ServerContext* context, const ::erepro::api::listings::v1::SearchListingsRequest* request, ::erepro::api::listings::v1::SearchListingsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetListing() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::GetListingRequest* request, ::erepro::api::listings::v1::Listing* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateListing() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_CreateListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::CreateListingRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateListing() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UpdateListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::UpdateListingRequest* request, ::erepro::api::listings::v1::Listing* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteListing() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::DeleteListingRequest* request, ::erepro::api::listings::v1::Listing* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListListings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListListings() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::erepro::api::listings::v1::ListListingsRequest, ::erepro::api::listings::v1::ListListingsResponse>(std::bind(&WithStreamedUnaryMethod_ListListings<BaseClass>::StreamedListListings, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListListings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListListings(::grpc::ServerContext* context, const ::erepro::api::listings::v1::ListListingsRequest* request, ::erepro::api::listings::v1::ListListingsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListListings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::erepro::api::listings::v1::ListListingsRequest,::erepro::api::listings::v1::ListListingsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchListings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SearchListings() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::erepro::api::listings::v1::SearchListingsRequest, ::erepro::api::listings::v1::SearchListingsResponse>(std::bind(&WithStreamedUnaryMethod_SearchListings<BaseClass>::StreamedSearchListings, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SearchListings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchListings(::grpc::ServerContext* context, const ::erepro::api::listings::v1::SearchListingsRequest* request, ::erepro::api::listings::v1::SearchListingsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchListings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::erepro::api::listings::v1::SearchListingsRequest,::erepro::api::listings::v1::SearchListingsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetListing() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::erepro::api::listings::v1::GetListingRequest, ::erepro::api::listings::v1::Listing>(std::bind(&WithStreamedUnaryMethod_GetListing<BaseClass>::StreamedGetListing, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::GetListingRequest* request, ::erepro::api::listings::v1::Listing* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetListing(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::erepro::api::listings::v1::GetListingRequest,::erepro::api::listings::v1::Listing>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateListing() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::erepro::api::listings::v1::CreateListingRequest, ::google::longrunning::Operation>(std::bind(&WithStreamedUnaryMethod_CreateListing<BaseClass>::StreamedCreateListing, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::CreateListingRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateListing(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::erepro::api::listings::v1::CreateListingRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateListing() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::erepro::api::listings::v1::UpdateListingRequest, ::erepro::api::listings::v1::Listing>(std::bind(&WithStreamedUnaryMethod_UpdateListing<BaseClass>::StreamedUpdateListing, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::UpdateListingRequest* request, ::erepro::api::listings::v1::Listing* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateListing(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::erepro::api::listings::v1::UpdateListingRequest,::erepro::api::listings::v1::Listing>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteListing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteListing() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::erepro::api::listings::v1::DeleteListingRequest, ::erepro::api::listings::v1::Listing>(std::bind(&WithStreamedUnaryMethod_DeleteListing<BaseClass>::StreamedDeleteListing, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteListing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::DeleteListingRequest* request, ::erepro::api::listings::v1::Listing* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteListing(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::erepro::api::listings::v1::DeleteListingRequest,::erepro::api::listings::v1::Listing>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ListListings<WithStreamedUnaryMethod_SearchListings<WithStreamedUnaryMethod_GetListing<WithStreamedUnaryMethod_CreateListing<WithStreamedUnaryMethod_UpdateListing<WithStreamedUnaryMethod_DeleteListing<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ListListings<WithStreamedUnaryMethod_SearchListings<WithStreamedUnaryMethod_GetListing<WithStreamedUnaryMethod_CreateListing<WithStreamedUnaryMethod_UpdateListing<WithStreamedUnaryMethod_DeleteListing<Service > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace listings
}  // namespace api
}  // namespace erepro


#endif  // GRPC_erepro_2fapi_2flistings_2fv1_2flistings_2eproto__INCLUDED
