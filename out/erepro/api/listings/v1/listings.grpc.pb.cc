// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: erepro/api/listings/v1/listings.proto

#include "erepro/api/listings/v1/listings.pb.h"
#include "erepro/api/listings/v1/listings.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace erepro {
namespace api {
namespace listings {
namespace v1 {

static const char* Listings_method_names[] = {
  "/erepro.api.listings.v1.Listings/ListListings",
  "/erepro.api.listings.v1.Listings/SearchListings",
  "/erepro.api.listings.v1.Listings/GetListing",
  "/erepro.api.listings.v1.Listings/CreateListing",
  "/erepro.api.listings.v1.Listings/UpdateListing",
  "/erepro.api.listings.v1.Listings/DeleteListing",
};

std::unique_ptr< Listings::Stub> Listings::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Listings::Stub> stub(new Listings::Stub(channel));
  return stub;
}

Listings::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ListListings_(Listings_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SearchListings_(Listings_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetListing_(Listings_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateListing_(Listings_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateListing_(Listings_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteListing_(Listings_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status Listings::Stub::ListListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::erepro::api::listings::v1::ListListingsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListListings_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::ListListingsResponse>* Listings::Stub::AsyncListListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::erepro::api::listings::v1::ListListingsResponse>::Create(channel_.get(), cq, rpcmethod_ListListings_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::ListListingsResponse>* Listings::Stub::PrepareAsyncListListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::ListListingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::erepro::api::listings::v1::ListListingsResponse>::Create(channel_.get(), cq, rpcmethod_ListListings_, context, request, false);
}

::grpc::Status Listings::Stub::SearchListings(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::erepro::api::listings::v1::SearchListingsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SearchListings_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::SearchListingsResponse>* Listings::Stub::AsyncSearchListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::erepro::api::listings::v1::SearchListingsResponse>::Create(channel_.get(), cq, rpcmethod_SearchListings_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::SearchListingsResponse>* Listings::Stub::PrepareAsyncSearchListingsRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::SearchListingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::erepro::api::listings::v1::SearchListingsResponse>::Create(channel_.get(), cq, rpcmethod_SearchListings_, context, request, false);
}

::grpc::Status Listings::Stub::GetListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::erepro::api::listings::v1::Listing* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetListing_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* Listings::Stub::AsyncGetListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::erepro::api::listings::v1::Listing>::Create(channel_.get(), cq, rpcmethod_GetListing_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* Listings::Stub::PrepareAsyncGetListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::GetListingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::erepro::api::listings::v1::Listing>::Create(channel_.get(), cq, rpcmethod_GetListing_, context, request, false);
}

::grpc::Status Listings::Stub::CreateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateListing_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* Listings::Stub::AsyncCreateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateListing_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* Listings::Stub::PrepareAsyncCreateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::CreateListingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateListing_, context, request, false);
}

::grpc::Status Listings::Stub::UpdateListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::erepro::api::listings::v1::Listing* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateListing_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* Listings::Stub::AsyncUpdateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::erepro::api::listings::v1::Listing>::Create(channel_.get(), cq, rpcmethod_UpdateListing_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* Listings::Stub::PrepareAsyncUpdateListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::UpdateListingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::erepro::api::listings::v1::Listing>::Create(channel_.get(), cq, rpcmethod_UpdateListing_, context, request, false);
}

::grpc::Status Listings::Stub::DeleteListing(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::erepro::api::listings::v1::Listing* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteListing_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* Listings::Stub::AsyncDeleteListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::erepro::api::listings::v1::Listing>::Create(channel_.get(), cq, rpcmethod_DeleteListing_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::erepro::api::listings::v1::Listing>* Listings::Stub::PrepareAsyncDeleteListingRaw(::grpc::ClientContext* context, const ::erepro::api::listings::v1::DeleteListingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::erepro::api::listings::v1::Listing>::Create(channel_.get(), cq, rpcmethod_DeleteListing_, context, request, false);
}

Listings::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Listings_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Listings::Service, ::erepro::api::listings::v1::ListListingsRequest, ::erepro::api::listings::v1::ListListingsResponse>(
          std::mem_fn(&Listings::Service::ListListings), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Listings_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Listings::Service, ::erepro::api::listings::v1::SearchListingsRequest, ::erepro::api::listings::v1::SearchListingsResponse>(
          std::mem_fn(&Listings::Service::SearchListings), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Listings_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Listings::Service, ::erepro::api::listings::v1::GetListingRequest, ::erepro::api::listings::v1::Listing>(
          std::mem_fn(&Listings::Service::GetListing), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Listings_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Listings::Service, ::erepro::api::listings::v1::CreateListingRequest, ::google::longrunning::Operation>(
          std::mem_fn(&Listings::Service::CreateListing), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Listings_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Listings::Service, ::erepro::api::listings::v1::UpdateListingRequest, ::erepro::api::listings::v1::Listing>(
          std::mem_fn(&Listings::Service::UpdateListing), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Listings_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Listings::Service, ::erepro::api::listings::v1::DeleteListingRequest, ::erepro::api::listings::v1::Listing>(
          std::mem_fn(&Listings::Service::DeleteListing), this)));
}

Listings::Service::~Service() {
}

::grpc::Status Listings::Service::ListListings(::grpc::ServerContext* context, const ::erepro::api::listings::v1::ListListingsRequest* request, ::erepro::api::listings::v1::ListListingsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Listings::Service::SearchListings(::grpc::ServerContext* context, const ::erepro::api::listings::v1::SearchListingsRequest* request, ::erepro::api::listings::v1::SearchListingsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Listings::Service::GetListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::GetListingRequest* request, ::erepro::api::listings::v1::Listing* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Listings::Service::CreateListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::CreateListingRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Listings::Service::UpdateListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::UpdateListingRequest* request, ::erepro::api::listings::v1::Listing* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Listings::Service::DeleteListing(::grpc::ServerContext* context, const ::erepro::api::listings::v1::DeleteListingRequest* request, ::erepro::api::listings::v1::Listing* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace erepro
}  // namespace api
}  // namespace listings
}  // namespace v1

