// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: erepro/api/branches/v1/branches.proto

#include "erepro/api/branches/v1/branches.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Branch;
}  // namespace protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace erepro {
namespace api {
namespace branches {
namespace v1 {
class BranchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Branch>
      _instance;
} _Branch_default_instance_;
class ListBranchesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBranchesRequest>
      _instance;
} _ListBranchesRequest_default_instance_;
class ListBranchesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBranchesResponse>
      _instance;
} _ListBranchesResponse_default_instance_;
class SearchBranchesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchBranchesRequest>
      _instance;
} _SearchBranchesRequest_default_instance_;
class SearchBranchesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchBranchesResponse>
      _instance;
} _SearchBranchesResponse_default_instance_;
class GetBranchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBranchRequest>
      _instance;
} _GetBranchRequest_default_instance_;
class CreateBranchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateBranchRequest>
      _instance;
} _CreateBranchRequest_default_instance_;
class UpdateBranchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateBranchRequest>
      _instance;
} _UpdateBranchRequest_default_instance_;
class DeleteBranchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteBranchRequest>
      _instance;
} _DeleteBranchRequest_default_instance_;
class BrancheOperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BrancheOperation>
      _instance;
} _BrancheOperation_default_instance_;
}  // namespace v1
}  // namespace branches
}  // namespace api
}  // namespace erepro
namespace protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto {
static void InitDefaultsBranch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::branches::v1::_Branch_default_instance_;
    new (ptr) ::erepro::api::branches::v1::Branch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::branches::v1::Branch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Branch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBranch}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsListBranchesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::branches::v1::_ListBranchesRequest_default_instance_;
    new (ptr) ::erepro::api::branches::v1::ListBranchesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::branches::v1::ListBranchesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBranchesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBranchesRequest}, {}};

static void InitDefaultsListBranchesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::branches::v1::_ListBranchesResponse_default_instance_;
    new (ptr) ::erepro::api::branches::v1::ListBranchesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::branches::v1::ListBranchesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListBranchesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListBranchesResponse}, {
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_Branch.base,}};

static void InitDefaultsSearchBranchesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::branches::v1::_SearchBranchesRequest_default_instance_;
    new (ptr) ::erepro::api::branches::v1::SearchBranchesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::branches::v1::SearchBranchesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchBranchesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchBranchesRequest}, {}};

static void InitDefaultsSearchBranchesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::branches::v1::_SearchBranchesResponse_default_instance_;
    new (ptr) ::erepro::api::branches::v1::SearchBranchesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::branches::v1::SearchBranchesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SearchBranchesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSearchBranchesResponse}, {
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_Branch.base,}};

static void InitDefaultsGetBranchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::branches::v1::_GetBranchRequest_default_instance_;
    new (ptr) ::erepro::api::branches::v1::GetBranchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::branches::v1::GetBranchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBranchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBranchRequest}, {}};

static void InitDefaultsCreateBranchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::branches::v1::_CreateBranchRequest_default_instance_;
    new (ptr) ::erepro::api::branches::v1::CreateBranchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::branches::v1::CreateBranchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateBranchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateBranchRequest}, {
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_Branch.base,}};

static void InitDefaultsUpdateBranchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::branches::v1::_UpdateBranchRequest_default_instance_;
    new (ptr) ::erepro::api::branches::v1::UpdateBranchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::branches::v1::UpdateBranchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateBranchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateBranchRequest}, {
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_Branch.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsDeleteBranchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::branches::v1::_DeleteBranchRequest_default_instance_;
    new (ptr) ::erepro::api::branches::v1::DeleteBranchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::branches::v1::DeleteBranchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteBranchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteBranchRequest}, {}};

static void InitDefaultsBrancheOperation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::branches::v1::_BrancheOperation_default_instance_;
    new (ptr) ::erepro::api::branches::v1::BrancheOperation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::branches::v1::BrancheOperation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BrancheOperation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBrancheOperation}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Branch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBranchesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBranchesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchBranchesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchBranchesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBranchRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateBranchRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateBranchRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteBranchRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BrancheOperation.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::Branch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::Branch, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::Branch, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::Branch, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::Branch, no_beds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::Branch, no_baths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::Branch, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::Branch, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::Branch, update_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::ListBranchesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::ListBranchesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::ListBranchesRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::ListBranchesRequest, show_delete_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::ListBranchesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::ListBranchesResponse, branches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::ListBranchesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::SearchBranchesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::SearchBranchesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::SearchBranchesRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::SearchBranchesRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::SearchBranchesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::SearchBranchesResponse, branches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::SearchBranchesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::GetBranchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::GetBranchRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::CreateBranchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::CreateBranchRequest, branch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::UpdateBranchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::UpdateBranchRequest, branch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::UpdateBranchRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::DeleteBranchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::DeleteBranchRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::BrancheOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::BrancheOperation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::branches::v1::BrancheOperation, operation_type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::erepro::api::branches::v1::Branch)},
  { 13, -1, sizeof(::erepro::api::branches::v1::ListBranchesRequest)},
  { 21, -1, sizeof(::erepro::api::branches::v1::ListBranchesResponse)},
  { 28, -1, sizeof(::erepro::api::branches::v1::SearchBranchesRequest)},
  { 36, -1, sizeof(::erepro::api::branches::v1::SearchBranchesResponse)},
  { 43, -1, sizeof(::erepro::api::branches::v1::GetBranchRequest)},
  { 49, -1, sizeof(::erepro::api::branches::v1::CreateBranchRequest)},
  { 55, -1, sizeof(::erepro::api::branches::v1::UpdateBranchRequest)},
  { 62, -1, sizeof(::erepro::api::branches::v1::DeleteBranchRequest)},
  { 68, -1, sizeof(::erepro::api::branches::v1::BrancheOperation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::branches::v1::_Branch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::branches::v1::_ListBranchesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::branches::v1::_ListBranchesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::branches::v1::_SearchBranchesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::branches::v1::_SearchBranchesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::branches::v1::_GetBranchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::branches::v1::_CreateBranchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::branches::v1::_UpdateBranchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::branches::v1::_DeleteBranchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::branches::v1::_BrancheOperation_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "erepro/api/branches/v1/branches.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%erepro/api/branches/v1/branches.proto\022"
      "\026erepro.api.branches.v1\032\034google/api/anno"
      "tations.proto\032#google/longrunning/operat"
      "ions.proto\032\037google/protobuf/timestamp.pr"
      "oto\032 google/protobuf/field_mask.proto\"\321\001"
      "\n\006Branch\022\014\n\004name\030\001 \001(\t\022\024\n\014display_name\030\002"
      " \001(\t\022\017\n\007address\030\003 \001(\t\022\017\n\007no_beds\030\004 \001(\r\022\020"
      "\n\010no_baths\030\005 \001(\r\022\r\n\005price\030\006 \001(\004\022/\n\013creat"
      "e_time\030\007 \001(\0132\032.google.protobuf.Timestamp"
      "\022/\n\013update_time\030\010 \001(\0132\032.google.protobuf."
      "Timestamp\"Q\n\023ListBranchesRequest\022\021\n\tpage"
      "_size\030\001 \001(\005\022\022\n\npage_token\030\002 \001(\t\022\023\n\013show_"
      "delete\030\003 \001(\010\"a\n\024ListBranchesResponse\0220\n\010"
      "branches\030\001 \003(\0132\036.erepro.api.branches.v1."
      "Branch\022\027\n\017next_page_token\030\002 \001(\t\"M\n\025Searc"
      "hBranchesRequest\022\021\n\tpage_size\030\001 \001(\005\022\022\n\np"
      "age_token\030\002 \001(\t\022\r\n\005query\030\003 \001(\t\"c\n\026Search"
      "BranchesResponse\0220\n\010branches\030\001 \003(\0132\036.ere"
      "pro.api.branches.v1.Branch\022\027\n\017next_page_"
      "token\030\002 \001(\t\" \n\020GetBranchRequest\022\014\n\004name\030"
      "\001 \001(\t\"E\n\023CreateBranchRequest\022.\n\006branch\030\001"
      " \001(\0132\036.erepro.api.branches.v1.Branch\"v\n\023"
      "UpdateBranchRequest\022.\n\006branch\030\001 \001(\0132\036.er"
      "epro.api.branches.v1.Branch\022/\n\013update_ma"
      "sk\030\002 \001(\0132\032.google.protobuf.FieldMask\"#\n\023"
      "DeleteBranchRequest\022\014\n\004name\030\001 \001(\t\"\255\001\n\020Br"
      "ancheOperation\022\014\n\004name\030\001 \001(\t\022N\n\016operatio"
      "n_type\030\002 \001(\01626.erepro.api.branches.v1.Br"
      "ancheOperation.OperationType\";\n\rOperatio"
      "nType\022\036\n\032OPERATION_TYPE_UNSPECIFIED\020\000\022\n\n"
      "\006CREATE\020\0012\225\006\n\010Branches\022\177\n\014ListBranches\022+"
      ".erepro.api.branches.v1.ListBranchesRequ"
      "est\032,.erepro.api.branches.v1.ListBranche"
      "sResponse\"\024\202\323\344\223\002\016\022\014/v1/branches\022\217\001\n\016Sear"
      "chBranches\022-.erepro.api.branches.v1.Sear"
      "chBranchesRequest\032..erepro.api.branches."
      "v1.SearchBranchesResponse\"\036\202\323\344\223\002\030\"\023/v1/b"
      "ranches:search:\001*\022t\n\tGetBranch\022(.erepro."
      "api.branches.v1.GetBranchRequest\032\036.erepr"
      "o.api.branches.v1.Branch\"\035\202\323\344\223\002\027\022\025/v1/{n"
      "ame=branches/*}\022x\n\014CreateBranch\022+.erepro"
      ".api.branches.v1.CreateBranchRequest\032\035.g"
      "oogle.longrunning.Operation\"\034\202\323\344\223\002\026\"\014/v1"
      "/branches:\006branch\022\211\001\n\014UpdateBranch\022+.ere"
      "pro.api.branches.v1.UpdateBranchRequest\032"
      "\036.erepro.api.branches.v1.Branch\",\202\323\344\223\002&2"
      "\034/v1/{branch.name=branches/*}:\006branch\022z\n"
      "\014DeleteBranch\022+.erepro.api.branches.v1.D"
      "eleteBranchRequest\032\036.erepro.api.branches"
      ".v1.Branch\"\035\202\323\344\223\002\027*\025/v1/{name=branches/*"
      "}b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2009);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "erepro/api/branches/v1/branches.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto
namespace erepro {
namespace api {
namespace branches {
namespace v1 {
const ::google::protobuf::EnumDescriptor* BrancheOperation_OperationType_descriptor() {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_enum_descriptors[0];
}
bool BrancheOperation_OperationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BrancheOperation_OperationType BrancheOperation::OPERATION_TYPE_UNSPECIFIED;
const BrancheOperation_OperationType BrancheOperation::CREATE;
const BrancheOperation_OperationType BrancheOperation::OperationType_MIN;
const BrancheOperation_OperationType BrancheOperation::OperationType_MAX;
const int BrancheOperation::OperationType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Branch::InitAsDefaultInstance() {
  ::erepro::api::branches::v1::_Branch_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::erepro::api::branches::v1::_Branch_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Branch::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void Branch::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Branch::kNameFieldNumber;
const int Branch::kDisplayNameFieldNumber;
const int Branch::kAddressFieldNumber;
const int Branch::kNoBedsFieldNumber;
const int Branch::kNoBathsFieldNumber;
const int Branch::kPriceFieldNumber;
const int Branch::kCreateTimeFieldNumber;
const int Branch::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Branch::Branch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_Branch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.branches.v1.Branch)
}
Branch::Branch(const Branch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  ::memcpy(&no_beds_, &from.no_beds_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&no_beds_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:erepro.api.branches.v1.Branch)
}

void Branch::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(price_));
}

Branch::~Branch() {
  // @@protoc_insertion_point(destructor:erepro.api.branches.v1.Branch)
  SharedDtor();
}

void Branch::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void Branch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Branch::descriptor() {
  ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Branch& Branch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_Branch.base);
  return *internal_default_instance();
}


void Branch::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.branches.v1.Branch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  ::memset(&no_beds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&no_beds_)) + sizeof(price_));
  _internal_metadata_.Clear();
}

bool Branch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.branches.v1.Branch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.Branch.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.Branch.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.Branch.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 no_beds = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_beds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 no_baths = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_baths_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 price = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.branches.v1.Branch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.branches.v1.Branch)
  return false;
#undef DO_
}

void Branch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.branches.v1.Branch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.Branch.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.Branch.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.Branch.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->address(), output);
  }

  // uint32 no_beds = 4;
  if (this->no_beds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->no_beds(), output);
  }

  // uint32 no_baths = 5;
  if (this->no_baths() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->no_baths(), output);
  }

  // uint64 price = 6;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->price(), output);
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp update_time = 8;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_update_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.branches.v1.Branch)
}

::google::protobuf::uint8* Branch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.branches.v1.Branch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.Branch.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.Branch.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.Branch.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->address(), target);
  }

  // uint32 no_beds = 4;
  if (this->no_beds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->no_beds(), target);
  }

  // uint32 no_baths = 5;
  if (this->no_baths() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->no_baths(), target);
  }

  // uint64 price = 6;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->price(), target);
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 8;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_update_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.branches.v1.Branch)
  return target;
}

size_t Branch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.branches.v1.Branch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string address = 3;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 8;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // uint32 no_beds = 4;
  if (this->no_beds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no_beds());
  }

  // uint32 no_baths = 5;
  if (this->no_baths() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no_baths());
  }

  // uint64 price = 6;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->price());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Branch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.branches.v1.Branch)
  GOOGLE_DCHECK_NE(&from, this);
  const Branch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Branch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.branches.v1.Branch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.branches.v1.Branch)
    MergeFrom(*source);
  }
}

void Branch::MergeFrom(const Branch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.branches.v1.Branch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.no_beds() != 0) {
    set_no_beds(from.no_beds());
  }
  if (from.no_baths() != 0) {
    set_no_baths(from.no_baths());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void Branch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.branches.v1.Branch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Branch::CopyFrom(const Branch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.branches.v1.Branch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Branch::IsInitialized() const {
  return true;
}

void Branch::Swap(Branch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Branch::InternalSwap(Branch* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(no_beds_, other->no_beds_);
  swap(no_baths_, other->no_baths_);
  swap(price_, other->price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Branch::GetMetadata() const {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBranchesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBranchesRequest::kPageSizeFieldNumber;
const int ListBranchesRequest::kPageTokenFieldNumber;
const int ListBranchesRequest::kShowDeleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBranchesRequest::ListBranchesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_ListBranchesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.branches.v1.ListBranchesRequest)
}
ListBranchesRequest::ListBranchesRequest(const ListBranchesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  ::memcpy(&page_size_, &from.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&show_delete_) -
    reinterpret_cast<char*>(&page_size_)) + sizeof(show_delete_));
  // @@protoc_insertion_point(copy_constructor:erepro.api.branches.v1.ListBranchesRequest)
}

void ListBranchesRequest::SharedCtor() {
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&show_delete_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(show_delete_));
}

ListBranchesRequest::~ListBranchesRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.branches.v1.ListBranchesRequest)
  SharedDtor();
}

void ListBranchesRequest::SharedDtor() {
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListBranchesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBranchesRequest::descriptor() {
  ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBranchesRequest& ListBranchesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_ListBranchesRequest.base);
  return *internal_default_instance();
}


void ListBranchesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.branches.v1.ListBranchesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&show_delete_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(show_delete_));
  _internal_metadata_.Clear();
}

bool ListBranchesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.branches.v1.ListBranchesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 page_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.ListBranchesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool show_delete = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_delete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.branches.v1.ListBranchesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.branches.v1.ListBranchesRequest)
  return false;
#undef DO_
}

void ListBranchesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.branches.v1.ListBranchesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_size(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.ListBranchesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // bool show_delete = 3;
  if (this->show_delete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->show_delete(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.branches.v1.ListBranchesRequest)
}

::google::protobuf::uint8* ListBranchesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.branches.v1.ListBranchesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_size(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.ListBranchesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // bool show_delete = 3;
  if (this->show_delete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->show_delete(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.branches.v1.ListBranchesRequest)
  return target;
}

size_t ListBranchesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.branches.v1.ListBranchesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // bool show_delete = 3;
  if (this->show_delete() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBranchesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.branches.v1.ListBranchesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBranchesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBranchesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.branches.v1.ListBranchesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.branches.v1.ListBranchesRequest)
    MergeFrom(*source);
  }
}

void ListBranchesRequest::MergeFrom(const ListBranchesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.branches.v1.ListBranchesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.show_delete() != 0) {
    set_show_delete(from.show_delete());
  }
}

void ListBranchesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.branches.v1.ListBranchesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBranchesRequest::CopyFrom(const ListBranchesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.branches.v1.ListBranchesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBranchesRequest::IsInitialized() const {
  return true;
}

void ListBranchesRequest::Swap(ListBranchesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBranchesRequest::InternalSwap(ListBranchesRequest* other) {
  using std::swap;
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  swap(show_delete_, other->show_delete_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBranchesRequest::GetMetadata() const {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBranchesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBranchesResponse::kBranchesFieldNumber;
const int ListBranchesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBranchesResponse::ListBranchesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_ListBranchesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.branches.v1.ListBranchesResponse)
}
ListBranchesResponse::ListBranchesResponse(const ListBranchesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      branches_(from.branches_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:erepro.api.branches.v1.ListBranchesResponse)
}

void ListBranchesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListBranchesResponse::~ListBranchesResponse() {
  // @@protoc_insertion_point(destructor:erepro.api.branches.v1.ListBranchesResponse)
  SharedDtor();
}

void ListBranchesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListBranchesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBranchesResponse::descriptor() {
  ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBranchesResponse& ListBranchesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_ListBranchesResponse.base);
  return *internal_default_instance();
}


void ListBranchesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.branches.v1.ListBranchesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  branches_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListBranchesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.branches.v1.ListBranchesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .erepro.api.branches.v1.Branch branches = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_branches()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.ListBranchesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.branches.v1.ListBranchesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.branches.v1.ListBranchesResponse)
  return false;
#undef DO_
}

void ListBranchesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.branches.v1.ListBranchesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .erepro.api.branches.v1.Branch branches = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->branches_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->branches(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.ListBranchesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.branches.v1.ListBranchesResponse)
}

::google::protobuf::uint8* ListBranchesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.branches.v1.ListBranchesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .erepro.api.branches.v1.Branch branches = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->branches_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->branches(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.ListBranchesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.branches.v1.ListBranchesResponse)
  return target;
}

size_t ListBranchesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.branches.v1.ListBranchesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .erepro.api.branches.v1.Branch branches = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->branches_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->branches(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBranchesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.branches.v1.ListBranchesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBranchesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBranchesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.branches.v1.ListBranchesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.branches.v1.ListBranchesResponse)
    MergeFrom(*source);
  }
}

void ListBranchesResponse::MergeFrom(const ListBranchesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.branches.v1.ListBranchesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  branches_.MergeFrom(from.branches_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListBranchesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.branches.v1.ListBranchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBranchesResponse::CopyFrom(const ListBranchesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.branches.v1.ListBranchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBranchesResponse::IsInitialized() const {
  return true;
}

void ListBranchesResponse::Swap(ListBranchesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBranchesResponse::InternalSwap(ListBranchesResponse* other) {
  using std::swap;
  CastToBase(&branches_)->InternalSwap(CastToBase(&other->branches_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBranchesResponse::GetMetadata() const {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchBranchesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchBranchesRequest::kPageSizeFieldNumber;
const int SearchBranchesRequest::kPageTokenFieldNumber;
const int SearchBranchesRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchBranchesRequest::SearchBranchesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_SearchBranchesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.branches.v1.SearchBranchesRequest)
}
SearchBranchesRequest::SearchBranchesRequest(const SearchBranchesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:erepro.api.branches.v1.SearchBranchesRequest)
}

void SearchBranchesRequest::SharedCtor() {
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

SearchBranchesRequest::~SearchBranchesRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.branches.v1.SearchBranchesRequest)
  SharedDtor();
}

void SearchBranchesRequest::SharedDtor() {
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchBranchesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchBranchesRequest::descriptor() {
  ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchBranchesRequest& SearchBranchesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_SearchBranchesRequest.base);
  return *internal_default_instance();
}


void SearchBranchesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.branches.v1.SearchBranchesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool SearchBranchesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.branches.v1.SearchBranchesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 page_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.SearchBranchesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string query = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.SearchBranchesRequest.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.branches.v1.SearchBranchesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.branches.v1.SearchBranchesRequest)
  return false;
#undef DO_
}

void SearchBranchesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.branches.v1.SearchBranchesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_size(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.SearchBranchesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // string query = 3;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.SearchBranchesRequest.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.branches.v1.SearchBranchesRequest)
}

::google::protobuf::uint8* SearchBranchesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.branches.v1.SearchBranchesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_size(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.SearchBranchesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // string query = 3;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.SearchBranchesRequest.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.branches.v1.SearchBranchesRequest)
  return target;
}

size_t SearchBranchesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.branches.v1.SearchBranchesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string query = 3;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchBranchesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.branches.v1.SearchBranchesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchBranchesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchBranchesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.branches.v1.SearchBranchesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.branches.v1.SearchBranchesRequest)
    MergeFrom(*source);
  }
}

void SearchBranchesRequest::MergeFrom(const SearchBranchesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.branches.v1.SearchBranchesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void SearchBranchesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.branches.v1.SearchBranchesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchBranchesRequest::CopyFrom(const SearchBranchesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.branches.v1.SearchBranchesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchBranchesRequest::IsInitialized() const {
  return true;
}

void SearchBranchesRequest::Swap(SearchBranchesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchBranchesRequest::InternalSwap(SearchBranchesRequest* other) {
  using std::swap;
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchBranchesRequest::GetMetadata() const {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchBranchesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchBranchesResponse::kBranchesFieldNumber;
const int SearchBranchesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchBranchesResponse::SearchBranchesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_SearchBranchesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.branches.v1.SearchBranchesResponse)
}
SearchBranchesResponse::SearchBranchesResponse(const SearchBranchesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      branches_(from.branches_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:erepro.api.branches.v1.SearchBranchesResponse)
}

void SearchBranchesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SearchBranchesResponse::~SearchBranchesResponse() {
  // @@protoc_insertion_point(destructor:erepro.api.branches.v1.SearchBranchesResponse)
  SharedDtor();
}

void SearchBranchesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchBranchesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchBranchesResponse::descriptor() {
  ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchBranchesResponse& SearchBranchesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_SearchBranchesResponse.base);
  return *internal_default_instance();
}


void SearchBranchesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.branches.v1.SearchBranchesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  branches_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SearchBranchesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.branches.v1.SearchBranchesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .erepro.api.branches.v1.Branch branches = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_branches()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.SearchBranchesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.branches.v1.SearchBranchesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.branches.v1.SearchBranchesResponse)
  return false;
#undef DO_
}

void SearchBranchesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.branches.v1.SearchBranchesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .erepro.api.branches.v1.Branch branches = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->branches_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->branches(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.SearchBranchesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.branches.v1.SearchBranchesResponse)
}

::google::protobuf::uint8* SearchBranchesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.branches.v1.SearchBranchesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .erepro.api.branches.v1.Branch branches = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->branches_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->branches(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.SearchBranchesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.branches.v1.SearchBranchesResponse)
  return target;
}

size_t SearchBranchesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.branches.v1.SearchBranchesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .erepro.api.branches.v1.Branch branches = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->branches_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->branches(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchBranchesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.branches.v1.SearchBranchesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchBranchesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchBranchesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.branches.v1.SearchBranchesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.branches.v1.SearchBranchesResponse)
    MergeFrom(*source);
  }
}

void SearchBranchesResponse::MergeFrom(const SearchBranchesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.branches.v1.SearchBranchesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  branches_.MergeFrom(from.branches_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void SearchBranchesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.branches.v1.SearchBranchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchBranchesResponse::CopyFrom(const SearchBranchesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.branches.v1.SearchBranchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchBranchesResponse::IsInitialized() const {
  return true;
}

void SearchBranchesResponse::Swap(SearchBranchesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchBranchesResponse::InternalSwap(SearchBranchesResponse* other) {
  using std::swap;
  CastToBase(&branches_)->InternalSwap(CastToBase(&other->branches_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchBranchesResponse::GetMetadata() const {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBranchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBranchRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBranchRequest::GetBranchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_GetBranchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.branches.v1.GetBranchRequest)
}
GetBranchRequest::GetBranchRequest(const GetBranchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:erepro.api.branches.v1.GetBranchRequest)
}

void GetBranchRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetBranchRequest::~GetBranchRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.branches.v1.GetBranchRequest)
  SharedDtor();
}

void GetBranchRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBranchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBranchRequest::descriptor() {
  ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBranchRequest& GetBranchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_GetBranchRequest.base);
  return *internal_default_instance();
}


void GetBranchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.branches.v1.GetBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetBranchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.branches.v1.GetBranchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.GetBranchRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.branches.v1.GetBranchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.branches.v1.GetBranchRequest)
  return false;
#undef DO_
}

void GetBranchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.branches.v1.GetBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.GetBranchRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.branches.v1.GetBranchRequest)
}

::google::protobuf::uint8* GetBranchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.branches.v1.GetBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.GetBranchRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.branches.v1.GetBranchRequest)
  return target;
}

size_t GetBranchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.branches.v1.GetBranchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBranchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.branches.v1.GetBranchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBranchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBranchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.branches.v1.GetBranchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.branches.v1.GetBranchRequest)
    MergeFrom(*source);
  }
}

void GetBranchRequest::MergeFrom(const GetBranchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.branches.v1.GetBranchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetBranchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.branches.v1.GetBranchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBranchRequest::CopyFrom(const GetBranchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.branches.v1.GetBranchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBranchRequest::IsInitialized() const {
  return true;
}

void GetBranchRequest::Swap(GetBranchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBranchRequest::InternalSwap(GetBranchRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBranchRequest::GetMetadata() const {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateBranchRequest::InitAsDefaultInstance() {
  ::erepro::api::branches::v1::_CreateBranchRequest_default_instance_._instance.get_mutable()->branch_ = const_cast< ::erepro::api::branches::v1::Branch*>(
      ::erepro::api::branches::v1::Branch::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateBranchRequest::kBranchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateBranchRequest::CreateBranchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_CreateBranchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.branches.v1.CreateBranchRequest)
}
CreateBranchRequest::CreateBranchRequest(const CreateBranchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_branch()) {
    branch_ = new ::erepro::api::branches::v1::Branch(*from.branch_);
  } else {
    branch_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:erepro.api.branches.v1.CreateBranchRequest)
}

void CreateBranchRequest::SharedCtor() {
  branch_ = NULL;
}

CreateBranchRequest::~CreateBranchRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.branches.v1.CreateBranchRequest)
  SharedDtor();
}

void CreateBranchRequest::SharedDtor() {
  if (this != internal_default_instance()) delete branch_;
}

void CreateBranchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateBranchRequest::descriptor() {
  ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateBranchRequest& CreateBranchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_CreateBranchRequest.base);
  return *internal_default_instance();
}


void CreateBranchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.branches.v1.CreateBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && branch_ != NULL) {
    delete branch_;
  }
  branch_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateBranchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.branches.v1.CreateBranchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .erepro.api.branches.v1.Branch branch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_branch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.branches.v1.CreateBranchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.branches.v1.CreateBranchRequest)
  return false;
#undef DO_
}

void CreateBranchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.branches.v1.CreateBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .erepro.api.branches.v1.Branch branch = 1;
  if (this->has_branch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_branch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.branches.v1.CreateBranchRequest)
}

::google::protobuf::uint8* CreateBranchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.branches.v1.CreateBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .erepro.api.branches.v1.Branch branch = 1;
  if (this->has_branch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_branch(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.branches.v1.CreateBranchRequest)
  return target;
}

size_t CreateBranchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.branches.v1.CreateBranchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .erepro.api.branches.v1.Branch branch = 1;
  if (this->has_branch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *branch_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateBranchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.branches.v1.CreateBranchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateBranchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateBranchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.branches.v1.CreateBranchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.branches.v1.CreateBranchRequest)
    MergeFrom(*source);
  }
}

void CreateBranchRequest::MergeFrom(const CreateBranchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.branches.v1.CreateBranchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_branch()) {
    mutable_branch()->::erepro::api::branches::v1::Branch::MergeFrom(from.branch());
  }
}

void CreateBranchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.branches.v1.CreateBranchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBranchRequest::CopyFrom(const CreateBranchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.branches.v1.CreateBranchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBranchRequest::IsInitialized() const {
  return true;
}

void CreateBranchRequest::Swap(CreateBranchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateBranchRequest::InternalSwap(CreateBranchRequest* other) {
  using std::swap;
  swap(branch_, other->branch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateBranchRequest::GetMetadata() const {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateBranchRequest::InitAsDefaultInstance() {
  ::erepro::api::branches::v1::_UpdateBranchRequest_default_instance_._instance.get_mutable()->branch_ = const_cast< ::erepro::api::branches::v1::Branch*>(
      ::erepro::api::branches::v1::Branch::internal_default_instance());
  ::erepro::api::branches::v1::_UpdateBranchRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateBranchRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateBranchRequest::kBranchFieldNumber;
const int UpdateBranchRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateBranchRequest::UpdateBranchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_UpdateBranchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.branches.v1.UpdateBranchRequest)
}
UpdateBranchRequest::UpdateBranchRequest(const UpdateBranchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_branch()) {
    branch_ = new ::erepro::api::branches::v1::Branch(*from.branch_);
  } else {
    branch_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:erepro.api.branches.v1.UpdateBranchRequest)
}

void UpdateBranchRequest::SharedCtor() {
  ::memset(&branch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&branch_)) + sizeof(update_mask_));
}

UpdateBranchRequest::~UpdateBranchRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.branches.v1.UpdateBranchRequest)
  SharedDtor();
}

void UpdateBranchRequest::SharedDtor() {
  if (this != internal_default_instance()) delete branch_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateBranchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateBranchRequest::descriptor() {
  ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateBranchRequest& UpdateBranchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_UpdateBranchRequest.base);
  return *internal_default_instance();
}


void UpdateBranchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.branches.v1.UpdateBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && branch_ != NULL) {
    delete branch_;
  }
  branch_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateBranchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.branches.v1.UpdateBranchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .erepro.api.branches.v1.Branch branch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_branch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.branches.v1.UpdateBranchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.branches.v1.UpdateBranchRequest)
  return false;
#undef DO_
}

void UpdateBranchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.branches.v1.UpdateBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .erepro.api.branches.v1.Branch branch = 1;
  if (this->has_branch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_branch(), output);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.branches.v1.UpdateBranchRequest)
}

::google::protobuf::uint8* UpdateBranchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.branches.v1.UpdateBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .erepro.api.branches.v1.Branch branch = 1;
  if (this->has_branch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_branch(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.branches.v1.UpdateBranchRequest)
  return target;
}

size_t UpdateBranchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.branches.v1.UpdateBranchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .erepro.api.branches.v1.Branch branch = 1;
  if (this->has_branch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *branch_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateBranchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.branches.v1.UpdateBranchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateBranchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateBranchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.branches.v1.UpdateBranchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.branches.v1.UpdateBranchRequest)
    MergeFrom(*source);
  }
}

void UpdateBranchRequest::MergeFrom(const UpdateBranchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.branches.v1.UpdateBranchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_branch()) {
    mutable_branch()->::erepro::api::branches::v1::Branch::MergeFrom(from.branch());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateBranchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.branches.v1.UpdateBranchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateBranchRequest::CopyFrom(const UpdateBranchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.branches.v1.UpdateBranchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBranchRequest::IsInitialized() const {
  return true;
}

void UpdateBranchRequest::Swap(UpdateBranchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateBranchRequest::InternalSwap(UpdateBranchRequest* other) {
  using std::swap;
  swap(branch_, other->branch_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateBranchRequest::GetMetadata() const {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteBranchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteBranchRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteBranchRequest::DeleteBranchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_DeleteBranchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.branches.v1.DeleteBranchRequest)
}
DeleteBranchRequest::DeleteBranchRequest(const DeleteBranchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:erepro.api.branches.v1.DeleteBranchRequest)
}

void DeleteBranchRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteBranchRequest::~DeleteBranchRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.branches.v1.DeleteBranchRequest)
  SharedDtor();
}

void DeleteBranchRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteBranchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteBranchRequest::descriptor() {
  ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteBranchRequest& DeleteBranchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_DeleteBranchRequest.base);
  return *internal_default_instance();
}


void DeleteBranchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.branches.v1.DeleteBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteBranchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.branches.v1.DeleteBranchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.DeleteBranchRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.branches.v1.DeleteBranchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.branches.v1.DeleteBranchRequest)
  return false;
#undef DO_
}

void DeleteBranchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.branches.v1.DeleteBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.DeleteBranchRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.branches.v1.DeleteBranchRequest)
}

::google::protobuf::uint8* DeleteBranchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.branches.v1.DeleteBranchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.DeleteBranchRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.branches.v1.DeleteBranchRequest)
  return target;
}

size_t DeleteBranchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.branches.v1.DeleteBranchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteBranchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.branches.v1.DeleteBranchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteBranchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteBranchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.branches.v1.DeleteBranchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.branches.v1.DeleteBranchRequest)
    MergeFrom(*source);
  }
}

void DeleteBranchRequest::MergeFrom(const DeleteBranchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.branches.v1.DeleteBranchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteBranchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.branches.v1.DeleteBranchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteBranchRequest::CopyFrom(const DeleteBranchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.branches.v1.DeleteBranchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBranchRequest::IsInitialized() const {
  return true;
}

void DeleteBranchRequest::Swap(DeleteBranchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteBranchRequest::InternalSwap(DeleteBranchRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteBranchRequest::GetMetadata() const {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BrancheOperation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BrancheOperation::kNameFieldNumber;
const int BrancheOperation::kOperationTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BrancheOperation::BrancheOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_BrancheOperation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.branches.v1.BrancheOperation)
}
BrancheOperation::BrancheOperation(const BrancheOperation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  operation_type_ = from.operation_type_;
  // @@protoc_insertion_point(copy_constructor:erepro.api.branches.v1.BrancheOperation)
}

void BrancheOperation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_type_ = 0;
}

BrancheOperation::~BrancheOperation() {
  // @@protoc_insertion_point(destructor:erepro.api.branches.v1.BrancheOperation)
  SharedDtor();
}

void BrancheOperation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BrancheOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BrancheOperation::descriptor() {
  ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BrancheOperation& BrancheOperation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::scc_info_BrancheOperation.base);
  return *internal_default_instance();
}


void BrancheOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.branches.v1.BrancheOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_type_ = 0;
  _internal_metadata_.Clear();
}

bool BrancheOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.branches.v1.BrancheOperation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.branches.v1.BrancheOperation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .erepro.api.branches.v1.BrancheOperation.OperationType operation_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_type(static_cast< ::erepro::api::branches::v1::BrancheOperation_OperationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.branches.v1.BrancheOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.branches.v1.BrancheOperation)
  return false;
#undef DO_
}

void BrancheOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.branches.v1.BrancheOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.BrancheOperation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .erepro.api.branches.v1.BrancheOperation.OperationType operation_type = 2;
  if (this->operation_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->operation_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.branches.v1.BrancheOperation)
}

::google::protobuf::uint8* BrancheOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.branches.v1.BrancheOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.branches.v1.BrancheOperation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .erepro.api.branches.v1.BrancheOperation.OperationType operation_type = 2;
  if (this->operation_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->operation_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.branches.v1.BrancheOperation)
  return target;
}

size_t BrancheOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.branches.v1.BrancheOperation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .erepro.api.branches.v1.BrancheOperation.OperationType operation_type = 2;
  if (this->operation_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BrancheOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.branches.v1.BrancheOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const BrancheOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BrancheOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.branches.v1.BrancheOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.branches.v1.BrancheOperation)
    MergeFrom(*source);
  }
}

void BrancheOperation::MergeFrom(const BrancheOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.branches.v1.BrancheOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.operation_type() != 0) {
    set_operation_type(from.operation_type());
  }
}

void BrancheOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.branches.v1.BrancheOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BrancheOperation::CopyFrom(const BrancheOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.branches.v1.BrancheOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BrancheOperation::IsInitialized() const {
  return true;
}

void BrancheOperation::Swap(BrancheOperation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BrancheOperation::InternalSwap(BrancheOperation* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(operation_type_, other->operation_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BrancheOperation::GetMetadata() const {
  protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_erepro_2fapi_2fbranches_2fv1_2fbranches_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace branches
}  // namespace api
}  // namespace erepro
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::branches::v1::Branch* Arena::CreateMaybeMessage< ::erepro::api::branches::v1::Branch >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::branches::v1::Branch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::branches::v1::ListBranchesRequest* Arena::CreateMaybeMessage< ::erepro::api::branches::v1::ListBranchesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::branches::v1::ListBranchesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::branches::v1::ListBranchesResponse* Arena::CreateMaybeMessage< ::erepro::api::branches::v1::ListBranchesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::branches::v1::ListBranchesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::branches::v1::SearchBranchesRequest* Arena::CreateMaybeMessage< ::erepro::api::branches::v1::SearchBranchesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::branches::v1::SearchBranchesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::branches::v1::SearchBranchesResponse* Arena::CreateMaybeMessage< ::erepro::api::branches::v1::SearchBranchesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::branches::v1::SearchBranchesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::branches::v1::GetBranchRequest* Arena::CreateMaybeMessage< ::erepro::api::branches::v1::GetBranchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::branches::v1::GetBranchRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::branches::v1::CreateBranchRequest* Arena::CreateMaybeMessage< ::erepro::api::branches::v1::CreateBranchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::branches::v1::CreateBranchRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::branches::v1::UpdateBranchRequest* Arena::CreateMaybeMessage< ::erepro::api::branches::v1::UpdateBranchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::branches::v1::UpdateBranchRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::branches::v1::DeleteBranchRequest* Arena::CreateMaybeMessage< ::erepro::api::branches::v1::DeleteBranchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::branches::v1::DeleteBranchRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::branches::v1::BrancheOperation* Arena::CreateMaybeMessage< ::erepro::api::branches::v1::BrancheOperation >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::branches::v1::BrancheOperation >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
