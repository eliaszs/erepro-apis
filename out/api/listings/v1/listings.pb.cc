// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/listings/v1/listings.proto

#include "api/listings/v1/listings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_api_2flistings_2fv1_2flistings_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2flistings_2fv1_2flistings_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Listing;
}  // namespace protobuf_api_2flistings_2fv1_2flistings_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace erepro {
namespace api {
namespace listings {
namespace v1 {
class ListingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Listing>
      _instance;
} _Listing_default_instance_;
class ListListingsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListListingsRequest>
      _instance;
} _ListListingsRequest_default_instance_;
class ListListingsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListListingsResponse>
      _instance;
} _ListListingsResponse_default_instance_;
class SearchListingsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchListingsRequest>
      _instance;
} _SearchListingsRequest_default_instance_;
class SearchListingsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchListingsResponse>
      _instance;
} _SearchListingsResponse_default_instance_;
class GetListingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetListingRequest>
      _instance;
} _GetListingRequest_default_instance_;
class CreateListingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateListingRequest>
      _instance;
} _CreateListingRequest_default_instance_;
class UpdateListingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateListingRequest>
      _instance;
} _UpdateListingRequest_default_instance_;
class DeleteListingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteListingRequest>
      _instance;
} _DeleteListingRequest_default_instance_;
class ListingOperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListingOperation>
      _instance;
} _ListingOperation_default_instance_;
}  // namespace v1
}  // namespace listings
}  // namespace api
}  // namespace erepro
namespace protobuf_api_2flistings_2fv1_2flistings_2eproto {
static void InitDefaultsListing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::listings::v1::_Listing_default_instance_;
    new (ptr) ::erepro::api::listings::v1::Listing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::listings::v1::Listing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Listing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListing}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsListListingsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::listings::v1::_ListListingsRequest_default_instance_;
    new (ptr) ::erepro::api::listings::v1::ListListingsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::listings::v1::ListListingsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListListingsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListListingsRequest}, {}};

static void InitDefaultsListListingsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::listings::v1::_ListListingsResponse_default_instance_;
    new (ptr) ::erepro::api::listings::v1::ListListingsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::listings::v1::ListListingsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListListingsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListListingsResponse}, {
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_Listing.base,}};

static void InitDefaultsSearchListingsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::listings::v1::_SearchListingsRequest_default_instance_;
    new (ptr) ::erepro::api::listings::v1::SearchListingsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::listings::v1::SearchListingsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchListingsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchListingsRequest}, {}};

static void InitDefaultsSearchListingsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::listings::v1::_SearchListingsResponse_default_instance_;
    new (ptr) ::erepro::api::listings::v1::SearchListingsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::listings::v1::SearchListingsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SearchListingsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSearchListingsResponse}, {
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_Listing.base,}};

static void InitDefaultsGetListingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::listings::v1::_GetListingRequest_default_instance_;
    new (ptr) ::erepro::api::listings::v1::GetListingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::listings::v1::GetListingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetListingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetListingRequest}, {}};

static void InitDefaultsCreateListingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::listings::v1::_CreateListingRequest_default_instance_;
    new (ptr) ::erepro::api::listings::v1::CreateListingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::listings::v1::CreateListingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateListingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateListingRequest}, {
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_Listing.base,}};

static void InitDefaultsUpdateListingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::listings::v1::_UpdateListingRequest_default_instance_;
    new (ptr) ::erepro::api::listings::v1::UpdateListingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::listings::v1::UpdateListingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateListingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateListingRequest}, {
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_Listing.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsDeleteListingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::listings::v1::_DeleteListingRequest_default_instance_;
    new (ptr) ::erepro::api::listings::v1::DeleteListingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::listings::v1::DeleteListingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteListingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteListingRequest}, {}};

static void InitDefaultsListingOperation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::erepro::api::listings::v1::_ListingOperation_default_instance_;
    new (ptr) ::erepro::api::listings::v1::ListingOperation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::erepro::api::listings::v1::ListingOperation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListingOperation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListingOperation}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Listing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListListingsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListListingsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchListingsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchListingsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetListingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateListingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateListingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteListingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListingOperation.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::Listing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::Listing, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::Listing, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::Listing, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::Listing, no_beds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::Listing, no_baths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::Listing, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::Listing, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::Listing, update_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::ListListingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::ListListingsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::ListListingsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::ListListingsRequest, show_delete_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::ListListingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::ListListingsResponse, listings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::ListListingsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::SearchListingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::SearchListingsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::SearchListingsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::SearchListingsRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::SearchListingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::SearchListingsResponse, listings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::SearchListingsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::GetListingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::GetListingRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::CreateListingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::CreateListingRequest, listing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::UpdateListingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::UpdateListingRequest, listing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::UpdateListingRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::DeleteListingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::DeleteListingRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::ListingOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::ListingOperation, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::erepro::api::listings::v1::ListingOperation, operation_type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::erepro::api::listings::v1::Listing)},
  { 13, -1, sizeof(::erepro::api::listings::v1::ListListingsRequest)},
  { 21, -1, sizeof(::erepro::api::listings::v1::ListListingsResponse)},
  { 28, -1, sizeof(::erepro::api::listings::v1::SearchListingsRequest)},
  { 36, -1, sizeof(::erepro::api::listings::v1::SearchListingsResponse)},
  { 43, -1, sizeof(::erepro::api::listings::v1::GetListingRequest)},
  { 49, -1, sizeof(::erepro::api::listings::v1::CreateListingRequest)},
  { 55, -1, sizeof(::erepro::api::listings::v1::UpdateListingRequest)},
  { 62, -1, sizeof(::erepro::api::listings::v1::DeleteListingRequest)},
  { 68, -1, sizeof(::erepro::api::listings::v1::ListingOperation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::listings::v1::_Listing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::listings::v1::_ListListingsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::listings::v1::_ListListingsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::listings::v1::_SearchListingsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::listings::v1::_SearchListingsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::listings::v1::_GetListingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::listings::v1::_CreateListingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::listings::v1::_UpdateListingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::listings::v1::_DeleteListingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::erepro::api::listings::v1::_ListingOperation_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "api/listings/v1/listings.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036api/listings/v1/listings.proto\022\026erepro"
      ".api.listings.v1\032\034google/api/annotations"
      ".proto\032#google/longrunning/operations.pr"
      "oto\032\037google/protobuf/timestamp.proto\032 go"
      "ogle/protobuf/field_mask.proto\"\205\002\n\007Listi"
      "ng\022\n\n\002id\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\017\n\007address\030"
      "\003 \001(\t\022\017\n\007no_beds\030\004 \001(\r\022\020\n\010no_baths\030\005 \001(\r"
      "\022\r\n\005price\030\006 \001(\004\022/\n\013create_time\030\007 \001(\0132\032.g"
      "oogle.protobuf.Timestamp\022/\n\013update_time\030"
      "\010 \001(\0132\032.google.protobuf.Timestamp\";\n\006Sta"
      "tus\022\017\n\013UNSPECIFIED\020\000\022\n\n\006ACTIVE\020\001\022\010\n\004SOLD"
      "\020\002\022\n\n\006RENTED\020\003\"Q\n\023ListListingsRequest\022\021\n"
      "\tpage_size\030\001 \001(\005\022\022\n\npage_token\030\002 \001(\t\022\023\n\013"
      "show_delete\030\003 \001(\010\"b\n\024ListListingsRespons"
      "e\0221\n\010listings\030\001 \003(\0132\037.erepro.api.listing"
      "s.v1.Listing\022\027\n\017next_page_token\030\002 \001(\t\"M\n"
      "\025SearchListingsRequest\022\021\n\tpage_size\030\001 \001("
      "\005\022\022\n\npage_token\030\002 \001(\t\022\r\n\005query\030\003 \001(\t\"d\n\026"
      "SearchListingsResponse\0221\n\010listings\030\001 \003(\013"
      "2\037.erepro.api.listings.v1.Listing\022\027\n\017nex"
      "t_page_token\030\002 \001(\t\"\037\n\021GetListingRequest\022"
      "\n\n\002id\030\001 \001(\004\"H\n\024CreateListingRequest\0220\n\007l"
      "isting\030\001 \001(\0132\037.erepro.api.listings.v1.Li"
      "sting\"y\n\024UpdateListingRequest\0220\n\007listing"
      "\030\001 \001(\0132\037.erepro.api.listings.v1.Listing\022"
      "/\n\013update_mask\030\002 \001(\0132\032.google.protobuf.F"
      "ieldMask\"\"\n\024DeleteListingRequest\022\n\n\002id\030\001"
      " \001(\004\"\253\001\n\020ListingOperation\022\n\n\002id\030\001 \001(\004\022N\n"
      "\016operation_type\030\002 \001(\01626.erepro.api.listi"
      "ngs.v1.ListingOperation.OperationType\";\n"
      "\rOperationType\022\036\n\032OPERATION_TYPE_UNSPECI"
      "FIED\020\000\022\n\n\006CREATE\020\0012\235\006\n\010Listings\022\177\n\014ListL"
      "istings\022+.erepro.api.listings.v1.ListLis"
      "tingsRequest\032,.erepro.api.listings.v1.Li"
      "stListingsResponse\"\024\202\323\344\223\002\016\022\014/v1/listings"
      "\022\217\001\n\016SearchListings\022-.erepro.api.listing"
      "s.v1.SearchListingsRequest\032..erepro.api."
      "listings.v1.SearchListingsResponse\"\036\202\323\344\223"
      "\002\030\"\023/v1/listings:search:\001*\022u\n\nGetListing"
      "\022).erepro.api.listings.v1.GetListingRequ"
      "est\032\037.erepro.api.listings.v1.Listing\"\033\202\323"
      "\344\223\002\025\022\023/v1/{id=listings}/*\022{\n\rCreateListi"
      "ng\022,.erepro.api.listings.v1.CreateListin"
      "gRequest\032\035.google.longrunning.Operation\""
      "\035\202\323\344\223\002\027\"\014/v1/listings:\007listing\022\214\001\n\rUpdat"
      "eListing\022,.erepro.api.listings.v1.Update"
      "ListingRequest\032\037.erepro.api.listings.v1."
      "Listing\",\202\323\344\223\002&2\033/v1/{listing.id=listing"
      "s/*}:\007listing\022{\n\rDeleteListing\022,.erepro."
      "api.listings.v1.DeleteListingRequest\032\037.e"
      "repro.api.listings.v1.Listing\"\033\202\323\344\223\002\025*\023/"
      "v1/{id=listings/*}b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2066);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api/listings/v1/listings.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2flistings_2fv1_2flistings_2eproto
namespace erepro {
namespace api {
namespace listings {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Listing_Status_descriptor() {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_enum_descriptors[0];
}
bool Listing_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Listing_Status Listing::UNSPECIFIED;
const Listing_Status Listing::ACTIVE;
const Listing_Status Listing::SOLD;
const Listing_Status Listing::RENTED;
const Listing_Status Listing::Status_MIN;
const Listing_Status Listing::Status_MAX;
const int Listing::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ListingOperation_OperationType_descriptor() {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_enum_descriptors[1];
}
bool ListingOperation_OperationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ListingOperation_OperationType ListingOperation::OPERATION_TYPE_UNSPECIFIED;
const ListingOperation_OperationType ListingOperation::CREATE;
const ListingOperation_OperationType ListingOperation::OperationType_MIN;
const ListingOperation_OperationType ListingOperation::OperationType_MAX;
const int ListingOperation::OperationType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Listing::InitAsDefaultInstance() {
  ::erepro::api::listings::v1::_Listing_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::erepro::api::listings::v1::_Listing_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Listing::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void Listing::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Listing::kIdFieldNumber;
const int Listing::kNameFieldNumber;
const int Listing::kAddressFieldNumber;
const int Listing::kNoBedsFieldNumber;
const int Listing::kNoBathsFieldNumber;
const int Listing::kPriceFieldNumber;
const int Listing::kCreateTimeFieldNumber;
const int Listing::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Listing::Listing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_Listing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.listings.v1.Listing)
}
Listing::Listing(const Listing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&id_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:erepro.api.listings.v1.Listing)
}

void Listing::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(price_));
}

Listing::~Listing() {
  // @@protoc_insertion_point(destructor:erepro.api.listings.v1.Listing)
  SharedDtor();
}

void Listing::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void Listing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Listing::descriptor() {
  ::protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Listing& Listing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_Listing.base);
  return *internal_default_instance();
}


void Listing::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.listings.v1.Listing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&id_)) + sizeof(price_));
  _internal_metadata_.Clear();
}

bool Listing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.listings.v1.Listing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.listings.v1.Listing.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.listings.v1.Listing.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 no_beds = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_beds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 no_baths = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_baths_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 price = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.listings.v1.Listing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.listings.v1.Listing)
  return false;
#undef DO_
}

void Listing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.listings.v1.Listing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.Listing.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.Listing.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->address(), output);
  }

  // uint32 no_beds = 4;
  if (this->no_beds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->no_beds(), output);
  }

  // uint32 no_baths = 5;
  if (this->no_baths() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->no_baths(), output);
  }

  // uint64 price = 6;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->price(), output);
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp update_time = 8;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_update_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.listings.v1.Listing)
}

::google::protobuf::uint8* Listing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.listings.v1.Listing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.Listing.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.Listing.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->address(), target);
  }

  // uint32 no_beds = 4;
  if (this->no_beds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->no_beds(), target);
  }

  // uint32 no_baths = 5;
  if (this->no_baths() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->no_baths(), target);
  }

  // uint64 price = 6;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->price(), target);
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 8;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_update_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.listings.v1.Listing)
  return target;
}

size_t Listing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.listings.v1.Listing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string address = 3;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // .google.protobuf.Timestamp create_time = 7;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 8;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 no_beds = 4;
  if (this->no_beds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no_beds());
  }

  // uint32 no_baths = 5;
  if (this->no_baths() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->no_baths());
  }

  // uint64 price = 6;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->price());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Listing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.listings.v1.Listing)
  GOOGLE_DCHECK_NE(&from, this);
  const Listing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Listing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.listings.v1.Listing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.listings.v1.Listing)
    MergeFrom(*source);
  }
}

void Listing::MergeFrom(const Listing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.listings.v1.Listing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.no_beds() != 0) {
    set_no_beds(from.no_beds());
  }
  if (from.no_baths() != 0) {
    set_no_baths(from.no_baths());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void Listing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.listings.v1.Listing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Listing::CopyFrom(const Listing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.listings.v1.Listing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Listing::IsInitialized() const {
  return true;
}

void Listing::Swap(Listing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Listing::InternalSwap(Listing* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(id_, other->id_);
  swap(no_beds_, other->no_beds_);
  swap(no_baths_, other->no_baths_);
  swap(price_, other->price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Listing::GetMetadata() const {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListListingsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListListingsRequest::kPageSizeFieldNumber;
const int ListListingsRequest::kPageTokenFieldNumber;
const int ListListingsRequest::kShowDeleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListListingsRequest::ListListingsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_ListListingsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.listings.v1.ListListingsRequest)
}
ListListingsRequest::ListListingsRequest(const ListListingsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  ::memcpy(&page_size_, &from.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&show_delete_) -
    reinterpret_cast<char*>(&page_size_)) + sizeof(show_delete_));
  // @@protoc_insertion_point(copy_constructor:erepro.api.listings.v1.ListListingsRequest)
}

void ListListingsRequest::SharedCtor() {
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&show_delete_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(show_delete_));
}

ListListingsRequest::~ListListingsRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.listings.v1.ListListingsRequest)
  SharedDtor();
}

void ListListingsRequest::SharedDtor() {
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListListingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListListingsRequest::descriptor() {
  ::protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListListingsRequest& ListListingsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_ListListingsRequest.base);
  return *internal_default_instance();
}


void ListListingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.listings.v1.ListListingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&show_delete_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(show_delete_));
  _internal_metadata_.Clear();
}

bool ListListingsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.listings.v1.ListListingsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 page_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.listings.v1.ListListingsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool show_delete = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_delete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.listings.v1.ListListingsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.listings.v1.ListListingsRequest)
  return false;
#undef DO_
}

void ListListingsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.listings.v1.ListListingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_size(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.ListListingsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // bool show_delete = 3;
  if (this->show_delete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->show_delete(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.listings.v1.ListListingsRequest)
}

::google::protobuf::uint8* ListListingsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.listings.v1.ListListingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_size(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.ListListingsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // bool show_delete = 3;
  if (this->show_delete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->show_delete(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.listings.v1.ListListingsRequest)
  return target;
}

size_t ListListingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.listings.v1.ListListingsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // bool show_delete = 3;
  if (this->show_delete() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListListingsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.listings.v1.ListListingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListListingsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListListingsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.listings.v1.ListListingsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.listings.v1.ListListingsRequest)
    MergeFrom(*source);
  }
}

void ListListingsRequest::MergeFrom(const ListListingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.listings.v1.ListListingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.show_delete() != 0) {
    set_show_delete(from.show_delete());
  }
}

void ListListingsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.listings.v1.ListListingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListListingsRequest::CopyFrom(const ListListingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.listings.v1.ListListingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListListingsRequest::IsInitialized() const {
  return true;
}

void ListListingsRequest::Swap(ListListingsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListListingsRequest::InternalSwap(ListListingsRequest* other) {
  using std::swap;
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  swap(show_delete_, other->show_delete_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListListingsRequest::GetMetadata() const {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListListingsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListListingsResponse::kListingsFieldNumber;
const int ListListingsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListListingsResponse::ListListingsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_ListListingsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.listings.v1.ListListingsResponse)
}
ListListingsResponse::ListListingsResponse(const ListListingsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      listings_(from.listings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:erepro.api.listings.v1.ListListingsResponse)
}

void ListListingsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListListingsResponse::~ListListingsResponse() {
  // @@protoc_insertion_point(destructor:erepro.api.listings.v1.ListListingsResponse)
  SharedDtor();
}

void ListListingsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListListingsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListListingsResponse::descriptor() {
  ::protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListListingsResponse& ListListingsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_ListListingsResponse.base);
  return *internal_default_instance();
}


void ListListingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.listings.v1.ListListingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listings_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListListingsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.listings.v1.ListListingsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .erepro.api.listings.v1.Listing listings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_listings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.listings.v1.ListListingsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.listings.v1.ListListingsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.listings.v1.ListListingsResponse)
  return false;
#undef DO_
}

void ListListingsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.listings.v1.ListListingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .erepro.api.listings.v1.Listing listings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->listings(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.ListListingsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.listings.v1.ListListingsResponse)
}

::google::protobuf::uint8* ListListingsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.listings.v1.ListListingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .erepro.api.listings.v1.Listing listings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->listings(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.ListListingsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.listings.v1.ListListingsResponse)
  return target;
}

size_t ListListingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.listings.v1.ListListingsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .erepro.api.listings.v1.Listing listings = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->listings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->listings(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListListingsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.listings.v1.ListListingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListListingsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListListingsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.listings.v1.ListListingsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.listings.v1.ListListingsResponse)
    MergeFrom(*source);
  }
}

void ListListingsResponse::MergeFrom(const ListListingsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.listings.v1.ListListingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listings_.MergeFrom(from.listings_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListListingsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.listings.v1.ListListingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListListingsResponse::CopyFrom(const ListListingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.listings.v1.ListListingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListListingsResponse::IsInitialized() const {
  return true;
}

void ListListingsResponse::Swap(ListListingsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListListingsResponse::InternalSwap(ListListingsResponse* other) {
  using std::swap;
  CastToBase(&listings_)->InternalSwap(CastToBase(&other->listings_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListListingsResponse::GetMetadata() const {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchListingsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchListingsRequest::kPageSizeFieldNumber;
const int SearchListingsRequest::kPageTokenFieldNumber;
const int SearchListingsRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchListingsRequest::SearchListingsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_SearchListingsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.listings.v1.SearchListingsRequest)
}
SearchListingsRequest::SearchListingsRequest(const SearchListingsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:erepro.api.listings.v1.SearchListingsRequest)
}

void SearchListingsRequest::SharedCtor() {
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

SearchListingsRequest::~SearchListingsRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.listings.v1.SearchListingsRequest)
  SharedDtor();
}

void SearchListingsRequest::SharedDtor() {
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchListingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchListingsRequest::descriptor() {
  ::protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchListingsRequest& SearchListingsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_SearchListingsRequest.base);
  return *internal_default_instance();
}


void SearchListingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.listings.v1.SearchListingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool SearchListingsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.listings.v1.SearchListingsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 page_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.listings.v1.SearchListingsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string query = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.listings.v1.SearchListingsRequest.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.listings.v1.SearchListingsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.listings.v1.SearchListingsRequest)
  return false;
#undef DO_
}

void SearchListingsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.listings.v1.SearchListingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_size(), output);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.SearchListingsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_token(), output);
  }

  // string query = 3;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.SearchListingsRequest.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.listings.v1.SearchListingsRequest)
}

::google::protobuf::uint8* SearchListingsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.listings.v1.SearchListingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_size(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.SearchListingsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_token(), target);
  }

  // string query = 3;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.SearchListingsRequest.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.listings.v1.SearchListingsRequest)
  return target;
}

size_t SearchListingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.listings.v1.SearchListingsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string query = 3;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchListingsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.listings.v1.SearchListingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchListingsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchListingsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.listings.v1.SearchListingsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.listings.v1.SearchListingsRequest)
    MergeFrom(*source);
  }
}

void SearchListingsRequest::MergeFrom(const SearchListingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.listings.v1.SearchListingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void SearchListingsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.listings.v1.SearchListingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchListingsRequest::CopyFrom(const SearchListingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.listings.v1.SearchListingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchListingsRequest::IsInitialized() const {
  return true;
}

void SearchListingsRequest::Swap(SearchListingsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchListingsRequest::InternalSwap(SearchListingsRequest* other) {
  using std::swap;
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchListingsRequest::GetMetadata() const {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchListingsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchListingsResponse::kListingsFieldNumber;
const int SearchListingsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchListingsResponse::SearchListingsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_SearchListingsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.listings.v1.SearchListingsResponse)
}
SearchListingsResponse::SearchListingsResponse(const SearchListingsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      listings_(from.listings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:erepro.api.listings.v1.SearchListingsResponse)
}

void SearchListingsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SearchListingsResponse::~SearchListingsResponse() {
  // @@protoc_insertion_point(destructor:erepro.api.listings.v1.SearchListingsResponse)
  SharedDtor();
}

void SearchListingsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchListingsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchListingsResponse::descriptor() {
  ::protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchListingsResponse& SearchListingsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_SearchListingsResponse.base);
  return *internal_default_instance();
}


void SearchListingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.listings.v1.SearchListingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listings_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SearchListingsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.listings.v1.SearchListingsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .erepro.api.listings.v1.Listing listings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_listings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "erepro.api.listings.v1.SearchListingsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.listings.v1.SearchListingsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.listings.v1.SearchListingsResponse)
  return false;
#undef DO_
}

void SearchListingsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.listings.v1.SearchListingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .erepro.api.listings.v1.Listing listings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->listings(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.SearchListingsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.listings.v1.SearchListingsResponse)
}

::google::protobuf::uint8* SearchListingsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.listings.v1.SearchListingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .erepro.api.listings.v1.Listing listings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->listings(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "erepro.api.listings.v1.SearchListingsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.listings.v1.SearchListingsResponse)
  return target;
}

size_t SearchListingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.listings.v1.SearchListingsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .erepro.api.listings.v1.Listing listings = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->listings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->listings(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchListingsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.listings.v1.SearchListingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchListingsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchListingsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.listings.v1.SearchListingsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.listings.v1.SearchListingsResponse)
    MergeFrom(*source);
  }
}

void SearchListingsResponse::MergeFrom(const SearchListingsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.listings.v1.SearchListingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listings_.MergeFrom(from.listings_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void SearchListingsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.listings.v1.SearchListingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchListingsResponse::CopyFrom(const SearchListingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.listings.v1.SearchListingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchListingsResponse::IsInitialized() const {
  return true;
}

void SearchListingsResponse::Swap(SearchListingsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchListingsResponse::InternalSwap(SearchListingsResponse* other) {
  using std::swap;
  CastToBase(&listings_)->InternalSwap(CastToBase(&other->listings_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchListingsResponse::GetMetadata() const {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetListingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetListingRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetListingRequest::GetListingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_GetListingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.listings.v1.GetListingRequest)
}
GetListingRequest::GetListingRequest(const GetListingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:erepro.api.listings.v1.GetListingRequest)
}

void GetListingRequest::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
}

GetListingRequest::~GetListingRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.listings.v1.GetListingRequest)
  SharedDtor();
}

void GetListingRequest::SharedDtor() {
}

void GetListingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetListingRequest::descriptor() {
  ::protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetListingRequest& GetListingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_GetListingRequest.base);
  return *internal_default_instance();
}


void GetListingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.listings.v1.GetListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetListingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.listings.v1.GetListingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.listings.v1.GetListingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.listings.v1.GetListingRequest)
  return false;
#undef DO_
}

void GetListingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.listings.v1.GetListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.listings.v1.GetListingRequest)
}

::google::protobuf::uint8* GetListingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.listings.v1.GetListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.listings.v1.GetListingRequest)
  return target;
}

size_t GetListingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.listings.v1.GetListingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetListingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.listings.v1.GetListingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetListingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetListingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.listings.v1.GetListingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.listings.v1.GetListingRequest)
    MergeFrom(*source);
  }
}

void GetListingRequest::MergeFrom(const GetListingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.listings.v1.GetListingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void GetListingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.listings.v1.GetListingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetListingRequest::CopyFrom(const GetListingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.listings.v1.GetListingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetListingRequest::IsInitialized() const {
  return true;
}

void GetListingRequest::Swap(GetListingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetListingRequest::InternalSwap(GetListingRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetListingRequest::GetMetadata() const {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateListingRequest::InitAsDefaultInstance() {
  ::erepro::api::listings::v1::_CreateListingRequest_default_instance_._instance.get_mutable()->listing_ = const_cast< ::erepro::api::listings::v1::Listing*>(
      ::erepro::api::listings::v1::Listing::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateListingRequest::kListingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateListingRequest::CreateListingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_CreateListingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.listings.v1.CreateListingRequest)
}
CreateListingRequest::CreateListingRequest(const CreateListingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_listing()) {
    listing_ = new ::erepro::api::listings::v1::Listing(*from.listing_);
  } else {
    listing_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:erepro.api.listings.v1.CreateListingRequest)
}

void CreateListingRequest::SharedCtor() {
  listing_ = NULL;
}

CreateListingRequest::~CreateListingRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.listings.v1.CreateListingRequest)
  SharedDtor();
}

void CreateListingRequest::SharedDtor() {
  if (this != internal_default_instance()) delete listing_;
}

void CreateListingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateListingRequest::descriptor() {
  ::protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateListingRequest& CreateListingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_CreateListingRequest.base);
  return *internal_default_instance();
}


void CreateListingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.listings.v1.CreateListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && listing_ != NULL) {
    delete listing_;
  }
  listing_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateListingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.listings.v1.CreateListingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .erepro.api.listings.v1.Listing listing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_listing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.listings.v1.CreateListingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.listings.v1.CreateListingRequest)
  return false;
#undef DO_
}

void CreateListingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.listings.v1.CreateListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .erepro.api.listings.v1.Listing listing = 1;
  if (this->has_listing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_listing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.listings.v1.CreateListingRequest)
}

::google::protobuf::uint8* CreateListingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.listings.v1.CreateListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .erepro.api.listings.v1.Listing listing = 1;
  if (this->has_listing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_listing(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.listings.v1.CreateListingRequest)
  return target;
}

size_t CreateListingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.listings.v1.CreateListingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .erepro.api.listings.v1.Listing listing = 1;
  if (this->has_listing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *listing_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateListingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.listings.v1.CreateListingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateListingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateListingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.listings.v1.CreateListingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.listings.v1.CreateListingRequest)
    MergeFrom(*source);
  }
}

void CreateListingRequest::MergeFrom(const CreateListingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.listings.v1.CreateListingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_listing()) {
    mutable_listing()->::erepro::api::listings::v1::Listing::MergeFrom(from.listing());
  }
}

void CreateListingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.listings.v1.CreateListingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateListingRequest::CopyFrom(const CreateListingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.listings.v1.CreateListingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateListingRequest::IsInitialized() const {
  return true;
}

void CreateListingRequest::Swap(CreateListingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateListingRequest::InternalSwap(CreateListingRequest* other) {
  using std::swap;
  swap(listing_, other->listing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateListingRequest::GetMetadata() const {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateListingRequest::InitAsDefaultInstance() {
  ::erepro::api::listings::v1::_UpdateListingRequest_default_instance_._instance.get_mutable()->listing_ = const_cast< ::erepro::api::listings::v1::Listing*>(
      ::erepro::api::listings::v1::Listing::internal_default_instance());
  ::erepro::api::listings::v1::_UpdateListingRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateListingRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateListingRequest::kListingFieldNumber;
const int UpdateListingRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateListingRequest::UpdateListingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_UpdateListingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.listings.v1.UpdateListingRequest)
}
UpdateListingRequest::UpdateListingRequest(const UpdateListingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_listing()) {
    listing_ = new ::erepro::api::listings::v1::Listing(*from.listing_);
  } else {
    listing_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:erepro.api.listings.v1.UpdateListingRequest)
}

void UpdateListingRequest::SharedCtor() {
  ::memset(&listing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&listing_)) + sizeof(update_mask_));
}

UpdateListingRequest::~UpdateListingRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.listings.v1.UpdateListingRequest)
  SharedDtor();
}

void UpdateListingRequest::SharedDtor() {
  if (this != internal_default_instance()) delete listing_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateListingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateListingRequest::descriptor() {
  ::protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateListingRequest& UpdateListingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_UpdateListingRequest.base);
  return *internal_default_instance();
}


void UpdateListingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.listings.v1.UpdateListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && listing_ != NULL) {
    delete listing_;
  }
  listing_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateListingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.listings.v1.UpdateListingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .erepro.api.listings.v1.Listing listing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_listing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.listings.v1.UpdateListingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.listings.v1.UpdateListingRequest)
  return false;
#undef DO_
}

void UpdateListingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.listings.v1.UpdateListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .erepro.api.listings.v1.Listing listing = 1;
  if (this->has_listing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_listing(), output);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.listings.v1.UpdateListingRequest)
}

::google::protobuf::uint8* UpdateListingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.listings.v1.UpdateListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .erepro.api.listings.v1.Listing listing = 1;
  if (this->has_listing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_listing(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.listings.v1.UpdateListingRequest)
  return target;
}

size_t UpdateListingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.listings.v1.UpdateListingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .erepro.api.listings.v1.Listing listing = 1;
  if (this->has_listing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *listing_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateListingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.listings.v1.UpdateListingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateListingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateListingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.listings.v1.UpdateListingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.listings.v1.UpdateListingRequest)
    MergeFrom(*source);
  }
}

void UpdateListingRequest::MergeFrom(const UpdateListingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.listings.v1.UpdateListingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_listing()) {
    mutable_listing()->::erepro::api::listings::v1::Listing::MergeFrom(from.listing());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateListingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.listings.v1.UpdateListingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateListingRequest::CopyFrom(const UpdateListingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.listings.v1.UpdateListingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateListingRequest::IsInitialized() const {
  return true;
}

void UpdateListingRequest::Swap(UpdateListingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateListingRequest::InternalSwap(UpdateListingRequest* other) {
  using std::swap;
  swap(listing_, other->listing_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateListingRequest::GetMetadata() const {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteListingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteListingRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteListingRequest::DeleteListingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_DeleteListingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.listings.v1.DeleteListingRequest)
}
DeleteListingRequest::DeleteListingRequest(const DeleteListingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:erepro.api.listings.v1.DeleteListingRequest)
}

void DeleteListingRequest::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
}

DeleteListingRequest::~DeleteListingRequest() {
  // @@protoc_insertion_point(destructor:erepro.api.listings.v1.DeleteListingRequest)
  SharedDtor();
}

void DeleteListingRequest::SharedDtor() {
}

void DeleteListingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteListingRequest::descriptor() {
  ::protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteListingRequest& DeleteListingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_DeleteListingRequest.base);
  return *internal_default_instance();
}


void DeleteListingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.listings.v1.DeleteListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool DeleteListingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.listings.v1.DeleteListingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.listings.v1.DeleteListingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.listings.v1.DeleteListingRequest)
  return false;
#undef DO_
}

void DeleteListingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.listings.v1.DeleteListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.listings.v1.DeleteListingRequest)
}

::google::protobuf::uint8* DeleteListingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.listings.v1.DeleteListingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.listings.v1.DeleteListingRequest)
  return target;
}

size_t DeleteListingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.listings.v1.DeleteListingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteListingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.listings.v1.DeleteListingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteListingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteListingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.listings.v1.DeleteListingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.listings.v1.DeleteListingRequest)
    MergeFrom(*source);
  }
}

void DeleteListingRequest::MergeFrom(const DeleteListingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.listings.v1.DeleteListingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void DeleteListingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.listings.v1.DeleteListingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteListingRequest::CopyFrom(const DeleteListingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.listings.v1.DeleteListingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteListingRequest::IsInitialized() const {
  return true;
}

void DeleteListingRequest::Swap(DeleteListingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteListingRequest::InternalSwap(DeleteListingRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteListingRequest::GetMetadata() const {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListingOperation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListingOperation::kIdFieldNumber;
const int ListingOperation::kOperationTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListingOperation::ListingOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_ListingOperation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:erepro.api.listings.v1.ListingOperation)
}
ListingOperation::ListingOperation(const ListingOperation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&operation_type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(operation_type_));
  // @@protoc_insertion_point(copy_constructor:erepro.api.listings.v1.ListingOperation)
}

void ListingOperation::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(operation_type_));
}

ListingOperation::~ListingOperation() {
  // @@protoc_insertion_point(destructor:erepro.api.listings.v1.ListingOperation)
  SharedDtor();
}

void ListingOperation::SharedDtor() {
}

void ListingOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListingOperation::descriptor() {
  ::protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListingOperation& ListingOperation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2flistings_2fv1_2flistings_2eproto::scc_info_ListingOperation.base);
  return *internal_default_instance();
}


void ListingOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:erepro.api.listings.v1.ListingOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(operation_type_));
  _internal_metadata_.Clear();
}

bool ListingOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:erepro.api.listings.v1.ListingOperation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .erepro.api.listings.v1.ListingOperation.OperationType operation_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation_type(static_cast< ::erepro::api::listings::v1::ListingOperation_OperationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:erepro.api.listings.v1.ListingOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:erepro.api.listings.v1.ListingOperation)
  return false;
#undef DO_
}

void ListingOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:erepro.api.listings.v1.ListingOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // .erepro.api.listings.v1.ListingOperation.OperationType operation_type = 2;
  if (this->operation_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->operation_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:erepro.api.listings.v1.ListingOperation)
}

::google::protobuf::uint8* ListingOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:erepro.api.listings.v1.ListingOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // .erepro.api.listings.v1.ListingOperation.OperationType operation_type = 2;
  if (this->operation_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->operation_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:erepro.api.listings.v1.ListingOperation)
  return target;
}

size_t ListingOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:erepro.api.listings.v1.ListingOperation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // .erepro.api.listings.v1.ListingOperation.OperationType operation_type = 2;
  if (this->operation_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListingOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:erepro.api.listings.v1.ListingOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const ListingOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListingOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:erepro.api.listings.v1.ListingOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:erepro.api.listings.v1.ListingOperation)
    MergeFrom(*source);
  }
}

void ListingOperation::MergeFrom(const ListingOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:erepro.api.listings.v1.ListingOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.operation_type() != 0) {
    set_operation_type(from.operation_type());
  }
}

void ListingOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:erepro.api.listings.v1.ListingOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListingOperation::CopyFrom(const ListingOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:erepro.api.listings.v1.ListingOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListingOperation::IsInitialized() const {
  return true;
}

void ListingOperation::Swap(ListingOperation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListingOperation::InternalSwap(ListingOperation* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(operation_type_, other->operation_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListingOperation::GetMetadata() const {
  protobuf_api_2flistings_2fv1_2flistings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2flistings_2fv1_2flistings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace listings
}  // namespace api
}  // namespace erepro
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::listings::v1::Listing* Arena::CreateMaybeMessage< ::erepro::api::listings::v1::Listing >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::listings::v1::Listing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::listings::v1::ListListingsRequest* Arena::CreateMaybeMessage< ::erepro::api::listings::v1::ListListingsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::listings::v1::ListListingsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::listings::v1::ListListingsResponse* Arena::CreateMaybeMessage< ::erepro::api::listings::v1::ListListingsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::listings::v1::ListListingsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::listings::v1::SearchListingsRequest* Arena::CreateMaybeMessage< ::erepro::api::listings::v1::SearchListingsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::listings::v1::SearchListingsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::listings::v1::SearchListingsResponse* Arena::CreateMaybeMessage< ::erepro::api::listings::v1::SearchListingsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::listings::v1::SearchListingsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::listings::v1::GetListingRequest* Arena::CreateMaybeMessage< ::erepro::api::listings::v1::GetListingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::listings::v1::GetListingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::listings::v1::CreateListingRequest* Arena::CreateMaybeMessage< ::erepro::api::listings::v1::CreateListingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::listings::v1::CreateListingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::listings::v1::UpdateListingRequest* Arena::CreateMaybeMessage< ::erepro::api::listings::v1::UpdateListingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::listings::v1::UpdateListingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::listings::v1::DeleteListingRequest* Arena::CreateMaybeMessage< ::erepro::api::listings::v1::DeleteListingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::listings::v1::DeleteListingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::erepro::api::listings::v1::ListingOperation* Arena::CreateMaybeMessage< ::erepro::api::listings::v1::ListingOperation >(Arena* arena) {
  return Arena::CreateInternal< ::erepro::api::listings::v1::ListingOperation >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
